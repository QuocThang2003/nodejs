const itineraryService = require("../services/itineraryService");

// üìå L·∫•y t·∫•t c·∫£ l·ªãch tr√¨nh
exports.getAllItineraries = async (req, res) => {
    try {
        const itineraries = await itineraryService.getAllItineraries();
        res.json(itineraries);
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
};

// üìå L·∫•y t·∫•t c·∫£ l·ªãch tr√¨nh theo tourId
exports.getAllItineraries = async (req, res) => {
    const { tourId } = req.params; // L·∫•y tourId t·ª´ params

    try {
        if (!tourId) {
            return res.status(400).json({ message: "TourId kh√¥ng h·ª£p l·ªá." });
        }

        const itineraries = await itineraryService.getAllItinerariesByTourId(tourId);

        // Ki·ªÉm tra n·∫øu kh√¥ng c√≥ itineraries
        if (itineraries.length === 0) {
            return res.status(404).json({ message: "Ch∆∞a c√≥ danh s√°ch l·ªãch tr√¨nh cho tour n√†y." });
        }

        res.json(itineraries); // Tr·∫£ v·ªÅ danh s√°ch itineraries
    } catch (error) {
        console.error("L·ªói khi l·∫•y itineraries:", error);
        res.status(500).json({ message: error.message });
    }
};

// üìå T·∫°o m·ªõi l·ªãch tr√¨nh
exports.createItinerary = async (req, res) => {
    try {
        const data = req.body;
        if (req.file) {
            data.image = `/uploads/${req.file.filename}`;
        }
        const newItinerary = await itineraryService.createItinerary(data);
        res.status(201).json(newItinerary);
    } catch (error) {
        res.status(400).json({ message: error.message });
    }
};

// üìå C·∫≠p nh·∫≠t l·ªãch tr√¨nh
exports.updateItinerary = async (req, res) => {
    try {
        const data = req.body;
        if (req.file) {
            data.image = `/uploads/${req.file.filename}`;
        }
        const updatedItinerary = await itineraryService.updateItinerary(req.params.id, data);
        if (!updatedItinerary) {
            return res.status(404).json({ message: "L·ªãch tr√¨nh kh√¥ng t·ªìn t·∫°i." });
        }
        res.json(updatedItinerary);
    } catch (error) {
        res.status(400).json({ message: error.message });
    }
};

// üìå X√≥a l·ªãch tr√¨nh
exports.deleteItinerary = async (req, res) => {
    try {
        const deletedItinerary = await itineraryService.deleteItinerary(req.params.id);
        if (!deletedItinerary) {
            return res.status(404).json({ message: "L·ªãch tr√¨nh kh√¥ng t·ªìn t·∫°i." });
        }
        res.json({ message: "X√≥a th√†nh c√¥ng!" });
    } catch (error) {
        res.status(500).json({ message: error.message });
    }
};
